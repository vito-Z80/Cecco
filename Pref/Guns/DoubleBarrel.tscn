[gd_scene load_steps=3 format=2]

[ext_resource path="res://Pref/Guns/DoubleBarrelBullet.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends VisibilityNotifier2D

export (PackedScene) var bullet
onready var storage = g.pools.enemy_shotgun
#onready var storage = get_node(\"/root/g\").double_barrel_storage
var can_shoot = false
var pixel_counter = 0

func _physics_process(delta):
	if not can_shoot: return
	if g.hero_position.x > position.x - 48: return
	pixel_counter += 1
	if randi() % 20 != 1: return
	if pixel_counter >= 8:
		pixel_counter = 0
		fire()

func _on_DoubleBarrel_screen_entered():
	can_shoot = true

func _on_DoubleBarrel_screen_exited():
	can_shoot = false


func fire():
	if storage.empty():
		create_new_bullet()
	else:
		for b in storage:
			if !b.visible:
				bullet_update(b)
				return
		create_new_bullet()


func bullet_update(b):
	b.visible = true
	b.position.x = position.x - 4
	b.position.y = position.y + (1 if randf() < 0.5 else 9)

func create_new_bullet():
	var b = bullet.instance()
	bullet_update(b)
	storage.append(b)
	get_tree().current_scene.add_child(b)
	
"

[node name="DoubleBarrel" type="VisibilityNotifier2D"]
rect = Rect2( 0, 0, 32, 16 )
script = SubResource( 1 )
bullet = ExtResource( 1 )

[connection signal="screen_entered" from="." to="." method="_on_DoubleBarrel_screen_entered"]
[connection signal="screen_exited" from="." to="." method="_on_DoubleBarrel_screen_exited"]
