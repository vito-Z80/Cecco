[gd_scene load_steps=5 format=2]

[ext_resource path="res://Atlas/a.png" type="Texture" id=1]

[sub_resource type="GDScript" id=3]
script/source = "extends Area2D

signal launch(main_area)
signal destroy()

enum DIRECTION{
	LEFT,RIGHT,UP,DOWN,REPEAT_LAST
}
var direction
var area
var pre_position = Vector2()

func _ready():
	direction = get_rnd_direction()

func _physics_process(delta):
	rnd_move()
	pre_position = position

func rnd_move():
	var dir = get_rnd_direction()
	direction = direction if dir == DIRECTION.REPEAT_LAST else dir
	match direction:
		DIRECTION.LEFT:
			position.x -= 1
		DIRECTION.RIGHT:
			position.x += 1
		DIRECTION.UP:
			position.y -= 1
		DIRECTION.DOWN:
			position.y += 1
	if not overlaps_area(area):
		position = position.move_toward(Vector2.ZERO,1)
#		position = pre_position
#		rnd_move()

func get_rnd_direction():
	return DIRECTION.values()[rand_range(0,4)]


func _on_EnemyMiniBall_launch(main_area):
	area = main_area as Area2D
	
	


func _on_EnemyMiniBall_destroy():
	queue_free()
"

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 1 )
region = Rect2( 188, 324, 8, 8 )

[sub_resource type="CircleShape2D" id=2]
radius = 3.0

[node name="EnemyMiniBall" type="Area2D"]
script = SubResource( 3 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="."]
texture = SubResource( 1 )
centered = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 4, 4 )
shape = SubResource( 2 )

[connection signal="destroy" from="." to="." method="_on_EnemyMiniBall_destroy"]
[connection signal="launch" from="." to="." method="_on_EnemyMiniBall_launch"]
