[gd_scene load_steps=4 format=2]

[ext_resource path="res://Pref/Enemies/EnemyAlien.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends VisibilityNotifier2D

export (PackedScene) var enemy
onready var pool = g.pools.enemy_aliens as Array


const LAUNCH_TIME = 1
var can_launch = false
var time = 0

func _physics_process(delta):
	if can_launch:
		time += delta
		if time < LAUNCH_TIME: return
		time = 0
		if pool.empty():
			create_new_enemy()
		else:
			init_enemy()


func create_new_enemy():
	var e = enemy.instance()
	e.emit_signal(\"launch\", position)
	pool.append(e)
	get_tree().current_scene.add_child(e)

func init_enemy():
	for e in pool:
		if not e.visible:
			e.emit_signal(\"launch\", position)
			return
	create_new_enemy()




func _on_EnemyMissileArea_01_screen_entered():
	can_launch = true

func _on_EnemyMissileArea_01_screen_exited():
	can_launch = false

func _on_Limiter_area_entered(area):
	if area.name == \"Hero\":
		can_launch = false

func _on_Limiter_area_exited(area):
	if area.name == \"Hero\":
		can_launch = true
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 64, 96 )

[node name="EnemyAlienArea_01" type="VisibilityNotifier2D"]
rect = Rect2( -4, 0, 8, 192 )
script = SubResource( 1 )
enemy = ExtResource( 1 )

[node name="Limiter" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Limiter"]
position = Vector2( 0, 96 )
shape = SubResource( 2 )

[connection signal="screen_entered" from="." to="." method="_on_EnemyMissileArea_01_screen_entered"]
[connection signal="screen_exited" from="." to="." method="_on_EnemyMissileArea_01_screen_exited"]
[connection signal="area_entered" from="Limiter" to="." method="_on_Limiter_area_entered"]
[connection signal="area_exited" from="Limiter" to="." method="_on_Limiter_area_exited"]
